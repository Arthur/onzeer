#player

.album
  %span.artist
    =h @album.artist
  %span.album_name
    =h @album.name

  .tracks.playable
    %h3= pluralize(@album.tracks.length, "morceau", "morceaux")
    %ul
      = render :partial => "tracks/track.html", :collection => @album.tracks

  = javascript_tag "tracks = #{@album.tracks.to_json};"

  - if current_user.admin?
    %p.edit
      = link_to :edit, edit_album_path(@album)

  %ul.links
    - if !@album.musicbrainz_release_id.blank?
      %li.musicbrainz
        = link_to "MusicBrainz.org", "http://musicbrainz.org/release/#{@album.musicbrainz_release_id}.html"
    - elsif current_user.admin?
      %li.musicbrainz.find
        = link_to "Find MusicBrainz Releases", mb_releases_album_path(@album)

    - if !@album.amazon_asin.blank?
      %li.amazon{:class => "asin_#{@album.amazon_asin}"}
        = link_to "Amazon", "http://www.amazon.fr/gp/product/#{@album.amazon_asin}"

  = render :partial => "votes.html"

  = render :partial => "comments.html"

  .lists
    - in_lists = current_user.user_lists.select{|list| list.album_ids.include?(@album.id)}
    - other_lists = current_user.user_lists - in_lists
    .in_lists
      - unless in_lists.blank?
        %p Dans les listes suivantes :
        %ul
          - in_lists.each do |list|
            %li
              %span.name=h list.name
              .remove
                - form_tag remove_album_list_path(list.list_id), :method => :delete do
                  = hidden_field_tag :album_id, @album.id
                  = submit_tag "enlever"

    .not_in_lists
      - unless other_lists.blank?
        %p l'ajouter Ã  une liste :
        %ul
          - other_lists.each do |list|
            %li
              %span.name=h list.name
              .add
                - form_tag add_album_list_path(list.list_id) do
                  = hidden_field_tag :album_id, @album.id
                  = submit_tag "ajouter"
